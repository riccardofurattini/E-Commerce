services:
  zookeeper: 
    container_name: zookeeper
    image: 'confluentinc/cp-zookeeper:6.2.0' 
    ports: 
      - '2181:2181'
    environment: 
      ZOOKEEPER_CLIENT_PORT: 2181 
      ZOOKEEPER_TICK_TIME: 2000 
    volumes: 
      - ./zookeeper/data:/var/lib/zookeeper/data 
      - ./zookeeper/log:/var/lib/zookeeper/log
    restart: always
    networks: 
      my-network: 
        ipv4_address: 192.168.1.2

  kafka: 
    container_name: kafka 
    image: 'confluentinc/cp-kafka:6.2.0' 
    ports: 
      - '9092:9092' 
    environment: 
      KAFKA_BROKER_ID: 1 
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.3:9092 
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 
    depends_on: 
      - zookeeper
    volumes: 
      - ./kafka/data:/var/lib/kafka/data
    restart: always
    networks: 
      my-network: 
        ipv4_address: 192.168.1.3


  magazzino-db:
    image: postgres:15
    container_name: magazzino-db
    environment:
      - POSTGRES_USER=magazzino_user
      - POSTGRES_PASSWORD=p4ssw0rD
      - POSTGRES_DB=magazzino_db
    ports:
      - "2433:5432"
    volumes:
      - magazzino-data:/var/lib/postgresql/data
    restart: always
    networks:
      my-network:
        ipv4_address: 192.168.1.4

  magazzino:
    build:
      context: ./Magazzino
      dockerfile: Dockerfile
    container_name: magazzino
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "8080:8080"
    depends_on:
      - magazzino-db
    restart: always
    networks:
      my-network:
        ipv4_address: 192.168.1.5

  store-db:
    image: postgres:15
    container_name: store-db
    environment:
      - POSTGRES_USER=store_user
      - POSTGRES_PASSWORD=p4ssw0rD
      - POSTGRES_DB=store_db
    ports:
      - "2434:5432"
    volumes:
      - store-data:/var/lib/postgresql/data
    restart: always
    networks:
      my-network:
        ipv4_address: 192.168.1.6

  store:
    build:
      context: ./Store
      dockerfile: Dockerfile
    container_name: store
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "8081:8080"
    depends_on:
      - store-db
    restart: always
    networks:
      my-network:
        ipv4_address: 192.168.1.7

 # Servizio Adminer per la gestione dei database via web
  adminer:
    image: adminer:4.8.1
    container_name: adminer
    ports:
      - "2431:8080"  
    environment:
      TZ: Europe/Rome
      ADMINER_DEFAULT_SERVER: magazzino-db
    networks:
      my-network:
        ipv4_address: 192.168.1.8
    restart: always
volumes:
  magazzino-data:
  store-data:
  pagamento-data:

networks:
  my-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
